from aoc_wim.aoc2019 import q19
from aoc_wim.zgrid import ZGrid
from aoc_wim.zgrid import zrange


minibeam = """\
#.......................................
.#......................................
..##....................................
...###..................................
....###.................................
.....####...............................
......#####.............................
......######............................
.......#######..........................
........########........................
.........#########......................
..........#########.....................
...........##########...................
...........############.................
............############................
.............#############..............
..............##############............
...............###############..........
................###############.........
................#################.......
.................########OOOOOOOOOO.....
..................#######OOOOOOOOOO#....
...................######OOOOOOOOOO###..
....................#####OOOOOOOOOO#####
.....................####OOOOOOOOOO#####
.....................####OOOOOOOOOO#####
......................###OOOOOOOOOO#####
.......................##OOOOOOOOOO#####
........................#OOOOOOOOOO#####
.........................OOOOOOOOOO#####
..........................##############
..........................##############
...........................#############
............................############
.............................###########"""


def test_n_points_in_10x10():
    grid = ZGrid(minibeam)
    count = 0
    for z in zrange(0, 10 + 10j):
        count += grid.get(z) == "#"
    assert count == 27


def test_square():
    grid = ZGrid(minibeam)
    expected = grid.z("O")
    grid.translate({".": 0, "O": 1, "#": 1})
    z = q19.locate_square(beam=grid.get, width=10, hi=grid.height)
    assert z == 25 + 20j == expected
